{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Base Configuration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "GetWaterLevel": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetHourlyHeight": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetHighLowTide": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Base Configuration": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Available Tools": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetWindData": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetWaterTemperature": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetAirPressure": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetVisibility": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetHumidity": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetConductivity": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetSalinity": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetPH": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetDissolvedOxygen": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetRealTimeCurrents": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetCurrentsPredictions": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GetStationInfo": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Base Configuration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-17T17:17:12.522Z",
  "id": "45vakEdhDOSlYaD6",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "TidesAndCurrentsNOAA Agent",
  "nodes": [
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "defaultSettings",
              "type": "objectValue",
              "objectValue": "={\n\"format\": \"json\",\n\"time_zone\": \"GMT\",\n\"units\": \"english\",\n\"datum\": \"MLLW\",\n\"interval\": \"6\",\n\"bin\": \"1\"\n}"
            },
            {
              "name": "rateLimits",
              "type": "objectValue",
              "objectValue": "={\n\"requestsPerMinute\": 20,\n\"note\": \"Self-imposed limit to be respectful of the service\"\n}"
            },
            {
              "name": "validationRules",
              "type": "objectValue",
              "objectValue": "={\n\"dateFormat\": \"YYYY-MM-DD\",\n\"timeZones\": [\"GMT\", \"LST\", \"LST_LDT\"],\n\"units\": [\"english\", \"metric\"],\n\"datums\": [\"MLLW\", \"MSL\", \"MHW\", \"NAVD\", \"STND\"],\n\"intervals\": [\"6\", \"h\", \"hilo\"],\n\"formats\": [\"json\", \"csv\", \"xml\"]\n}"
            },
            {
              "name": "errorMessages",
              "type": "objectValue",
              "objectValue": "={\n\"invalidStation\": \"Invalid station ID provided\",\n\"invalidDate\": \"Date must be in YYYY-MM-DD format\",\n\"invalidTimeZone\": \"Time zone must be one of: GMT, LST, LST_LDT\",\n\"invalidUnits\": \"Units must be either 'english' or 'metric'\",\n\"invalidDatum\": \"Invalid vertical datum provided\",\n\"rateLimitExceeded\": \"Rate limit exceeded, please wait before making more requests\"\n}"
            },
            {
              "name": "responseHandling",
              "type": "objectValue",
              "objectValue": "={\n\"successCodes\": [200],\n\"errorCodes\": {\n\"400\": \"Bad Request - Check parameters\",\n\"404\": \"Station not found\",\n\"429\": \"Too many requests\",\n\"500\": \"NOAA API server error\"\n},\n\"retryConfig\": {\n\"maxRetries\": 3,\n\"retryDelay\": 1000\n}\n}"
            },
            {
              "name": "apiConfig",
              "type": "objectValue",
              "objectValue": "={\n\"baseUrl\": \"https://api.tidesandcurrents.noaa.gov/api/prod/\",\n\"application\": \"N8N_NOAA_Integration\",\n\"endpoints\": {\n\"datagetter\": \"datagetter\"\n}\n}"
            },
            {
              "name": "query",
              "stringValue": "={{ $json.chatInput || $json.query }}"
            },
            {
              "name": "sessionId",
              "stringValue": "={{ $json.sessionId }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        11900,
        4760
      ],
      "id": "c6a1f2dd-ee53-4946-82a8-ad5b5238dccc",
      "name": "Base Configuration",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "agent": "openAiFunctionsAgent",
        "promptType": "define",
        "text": "={{ \n $json.query + '\\n\\nConfiguration:\\n' \n  + JSON.stringify($('Base Configuration').item.json, null, 2) \n}}",
        "options": {
          "systemMessage": "You are a NOAA Tides and Currents data specialist. Your role is to help users access and analyze water level, environmental, and oceanographic data from NOAA stations.\n\nYou have access to several specialized tools for retrieving NOAA data. To learn about these tools, query the 'Available Tools' PostgreSQL node. This will return detailed information about:\n- All available tools and their purposes\n- Required and optional parameters for each tool\n- Valid parameter formats and values\n- Return data structures\n\nWhenever you are unsure about:\n- Which tool to use for a specific task\n- What parameters a tool requires\n- How to format parameters correctly\n- What data a tool returns\n\nQuery the 'Available Tools' PostgreSQL node to get this information. The response will help you choose the right tool and use it correctly.\n\nWhen helping users:\n1. Use the configuration settings provided with each message as defaults\n2. Always validate station IDs\n3. Use appropriate date formats based on the tool\n4. Handle unit conversions when needed\n5. Explain data interpretations\n6. Suggest relevant data products\n\nThe complete configuration object will be provided with each message in JSON format. Use these settings as defaults unless the user specifically requests different values."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        12160,
        4760
      ],
      "id": "84c08c0b-d3b2-4f46-b3be-650930adff45",
      "name": "AI Agent",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        11640,
        4760
      ],
      "id": "c05c400f-de8f-40dc-b5ae-7b97aa515e12",
      "name": "When chat message received",
      "webhookId": "0af3bd9a-16ee-4bdd-8daa-7bc264605734"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        11980,
        5160
      ],
      "id": "e57568fb-ec8b-4f0d-969d-0b44ea02ab45",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "jiaWKIPd7Ax7W6gQ",
          "name": "OpenAi"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        12160,
        5160
      ],
      "id": "ce8ae890-f7de-43dd-8435-800481b05bec",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "cXUsJeNKhv5471XR",
          "name": "CardinLocal"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve 6-minute interval water levels (preliminary or verified) from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- end_date: Optional. Only used for historical data requests\n- datum: Required. Vertical reference datum (e.g., MLLW)\n- time_zone: Optional. Default GMT\n- units: Optional. Default english (feet)\n\nReturns water level data with:\n- Time (t) in specified timezone\n- Water level value (v) in feet or meters\n- Standard deviation (s)\n- Quality flags (f)\n- Quality type (q)",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "water_level"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "end_date",
              "valueProvider": "modelOptional"
            },
            {
              "name": "datum"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        12500,
        4960
      ],
      "id": "4ccbfcd6-6f5d-4c98-bd5c-4dab568835fa",
      "name": "GetWaterLevel"
    },
    {
      "parameters": {
        "toolDescription": "Retrieve verified hourly water level heights from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- begin_date: Required. Start date in YYYY-MM-DD format\n- end_date: Required. End date in YYYY-MM-DD format\n- datum: Required. Vertical reference datum (e.g., MLLW)\n- time_zone: Optional. Default GMT\n- units: Optional. Default english (feet)\n\nReturns hourly water level data with:\n- Time (t) in specified timezone\n- Water level value (v) in feet or meters",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "hourly_height"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "begin_date"
            },
            {
              "name": "end_date"
            },
            {
              "name": "datum"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        12700,
        4960
      ],
      "id": "051379e5-3a5e-41ff-a2b7-2ff42b9497ae",
      "name": "GetHourlyHeight"
    },
    {
      "parameters": {
        "toolDescription": "Retrieve verified high and low tide data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- begin_date: Required. Start date in YYYY-MM-DD format\n- end_date: Required. End date in YYYY-MM-DD format\n- datum: Required. Vertical reference datum (e.g., MLLW)\n- time_zone: Optional. Default GMT\n- units: Optional. Default english (feet)\n\nReturns tide data with:\n- Time (t) in specified timezone\n- Water level value (v) in feet or meters\n- Type (ty): H for High tide, L for Low tide",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "high_low"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "begin_date"
            },
            {
              "name": "end_date"
            },
            {
              "name": "datum"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        12900,
        4960
      ],
      "id": "da9865b6-3dcf-4afe-8b36-4ef37795002a",
      "name": "GetHighLowTide"
    },
    {
      "parameters": {
        "toolDescription": "Retrieve wind data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- end_date: Optional. Only used for historical data requests\n- time_zone: Optional. Default GMT\n- interval: Optional. Time interval (defaults to 6 minutes)\n- units: Optional. Default english (mph)\n\nReturns wind data with:\n- Time (t) in specified timezone\n- Speed (s) in mph or m/s\n- Direction (d) in degrees\n- Gust (g) speed if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "wind"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "end_date",
              "valueProvider": "modelOptional"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "interval",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        13100,
        4960
      ],
      "id": "369078eb-4af9-4764-8f9f-9f178dcda51d",
      "name": "GetWindData",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve water temperature data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- end_date: Optional. Only used for historical data requests\n- time_zone: Optional. Default GMT\n- units: Optional. Default english (fahrenheit)\n\nReturns temperature data with:\n- Time (t) in specified timezone\n- Temperature (v) in fahrenheit or celsius\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "water_temperature"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "end_date",
              "valueProvider": "modelOptional"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        13300,
        4960
      ],
      "id": "ae9ba73c-6987-4743-9ac1-006f9d139414",
      "name": "GetWaterTemperature",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve air pressure data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- end_date: Optional. Only used for historical data requests\n- time_zone: Optional. Default GMT\n- units: Optional. Default english (mb)\n\nReturns pressure data with:\n- Time (t) in specified timezone\n- Pressure (v) in millibars or other units\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "air_pressure"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "end_date",
              "valueProvider": "modelOptional"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        13500,
        4960
      ],
      "id": "6609bce1-0f83-4b1c-b61f-d503424f414f",
      "name": "GetAirPressure",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve visibility data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- time_zone: Optional. Default GMT\n- units: Optional. Default English (statute miles)\n\nReturns visibility data with:\n- Time (t) in specified timezone\n- Visibility (v) in statute miles or kilometers\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "visibility"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        13700,
        4960
      ],
      "id": "a52efa8a-5323-47db-bd41-1c5017c61634",
      "name": "GetVisibility",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve relative humidity data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- time_zone: Optional. Default GMT\n\nReturns humidity data with:\n- Time (t) in specified timezone\n- Relative humidity (v) in percent\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "humidity"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        13900,
        4960
      ],
      "id": "971263b0-d60f-4b88-bbc2-d9cfffe0f029",
      "name": "GetHumidity",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve conductivity data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- end_date: Optional. Only used for historical data requests\n- time_zone: Optional. Default GMT\n\nReturns conductivity data with:\n- Time (t) in specified timezone\n- Conductivity (v) in siemens per meter\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "conductivity"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "end_date",
              "valueProvider": "modelOptional"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        14100,
        4960
      ],
      "id": "bc44866f-f938-4294-a712-2a7c83e88b3d",
      "name": "GetConductivity",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve salinity data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- end_date: Optional. Only used for historical data requests\n- time_zone: Optional. Default GMT\n\nReturns salinity data with:\n- Time (t) in specified timezone\n- Salinity (v) in practical salinity units (PSU)\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "salinity"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "end_date",
              "valueProvider": "modelOptional"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        14300,
        4960
      ],
      "id": "6545cc43-f11a-49bb-a5f9-4b973ed8b276",
      "name": "GetSalinity",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve pH data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- end_date: Optional. Only used for historical data requests\n- time_zone: Optional. Default GMT\n\nReturns pH data with:\n- Time (t) in specified timezone\n- pH value (v) on the pH scale\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "ph"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "end_date",
              "valueProvider": "modelOptional"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        14500,
        4960
      ],
      "id": "7013d93c-2ad8-4e78-9158-89b56ebd0ce9",
      "name": "GetPH",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve dissolved oxygen data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- end_date: Optional. Only used for historical data requests\n- time_zone: Optional. Default GMT\n\nReturns dissolved oxygen data with:\n- Time (t) in specified timezone\n- Dissolved oxygen (v) in milligrams per liter (mg/L)\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "oxygen"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "end_date",
              "valueProvider": "modelOptional"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        14700,
        4960
      ],
      "id": "f137b8fb-7ea1-488b-9b8d-94db0f44777b",
      "name": "GetDissolvedOxygen",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve real-time current data from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- date: Required. For real-time data, must be one of: 'today', 'latest', or 'recent'\n- time_zone: Optional. Default GMT\n- units: Optional. Default English (knots)\n- bin: Optional. Depth bin number for current measurements\n\nReturns current data with:\n- Time (t) in specified timezone\n- Speed (s) in knots or cm/s\n- Direction (d) in degrees true\n- Bin depth (b) in feet or meters\n- Quality flags (f) if available",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "currents"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "date"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "bin",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        14900,
        4960
      ],
      "id": "a7aedbfc-7b2a-4637-83e4-73c87ec8a0f7",
      "name": "GetRealTimeCurrents",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve current predictions from NOAA stations.\n\nParameters:\n- station: Required. The NOAA station ID\n- begin_date: Required. Start date in YYYY-MM-DD format\n- end_date: Required. End date in YYYY-MM-DD format\n- time_zone: Optional. Default GMT\n- interval: Optional. Time interval in minutes (default varies by station)\n- units: Optional. Default English (knots)\n- bin: Optional. Depth bin number for current predictions\n\nReturns predicted current data with:\n- Time (t) in specified timezone\n- Speed (s) in knots or cm/s\n- Direction (d) in degrees true\n- Bin depth (b) in feet or meters",
        "url": "={{ $('Base Configuration').item.json.apiConfig.baseUrl + $('Base Configuration').item.json.apiConfig.endpoints.datagetter }}",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "product",
              "valueProvider": "fieldValue",
              "value": "currents_predictions"
            },
            {
              "name": "application",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.apiConfig.application }}"
            },
            {
              "name": "station"
            },
            {
              "name": "begin_date"
            },
            {
              "name": "end_date"
            },
            {
              "name": "time_zone",
              "valueProvider": "modelOptional"
            },
            {
              "name": "interval",
              "valueProvider": "modelOptional"
            },
            {
              "name": "units",
              "valueProvider": "modelOptional"
            },
            {
              "name": "bin",
              "valueProvider": "modelOptional"
            },
            {
              "name": "format",
              "valueProvider": "fieldValue",
              "value": "={{ $('Base Configuration').item.json.defaultSettings.format }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        15100,
        4960
      ],
      "id": "ca8f4f38-5b99-4396-84ae-9f36fd033ad2",
      "name": "GetCurrentsPredictions",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT tool_name, description, required_parameters, optional_parameters, return_format FROM \"TidesAndCurrents_AvailableTools\" ORDER BY tool_name;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        15460,
        4960
      ],
      "id": "cf6c6a41-15eb-4ac5-ac13-be0f223f8ec1",
      "name": "Available Tools",
      "credentials": {
        "postgres": {
          "id": "cXUsJeNKhv5471XR",
          "name": "CardinLocal"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT station_id, station_name, state FROM \"NOAAStations\"",
        "options": {
          "queryReplacement": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query_Parameters', ``, 'string') }}"
        }
      },
      "name": "GetStationInfo",
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        15280,
        4960
      ],
      "id": "e9f8a225-78e0-40ba-a422-72ee5a9d1edd",
      "connections": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "credentials": {
        "postgres": {
          "id": "cXUsJeNKhv5471XR",
          "name": "CardinLocal"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "query"
            },
            {
              "name": "sessionId"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        11640,
        4960
      ],
      "id": "12f5ca30-6d9f-4ccc-9377-9e18cdf14c83",
      "name": "When Executed by Another Workflow"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-02-18T21:59:58.322Z",
      "updatedAt": "2025-02-18T21:59:58.322Z",
      "id": "jbCaYoPoaJ9HoUfE",
      "name": "TidesAndCurrents Agent"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-02-18T21:59:59.447Z",
  "versionId": "02b3851e-e4c3-4fe9-8eb0-0217ab8f0358"
}